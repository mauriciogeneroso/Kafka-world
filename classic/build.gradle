import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

ext {
    set('springCloudVersion', "2023.0.2")
}

bootJar {
    archiveFileName = "${project.name}.jar"
}

springBoot {
    mainClass = "com.generoso.kafka.classic.Application"
    buildInfo {
        properties {
            name = rootProject.name
            version = project.version
            additional = [
                    host           : InetAddress.localHost.hostName,
                    hostAddress    : InetAddress.localHost.getHostAddress(),
                    operatingSystem: DefaultNativePlatform.currentOperatingSystem.getInternalOs().toString()
            ]
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
